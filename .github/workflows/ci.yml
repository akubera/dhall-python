name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [created]
  schedule:
    # Runs every Thursday at 20:23 GMT to avoid bit rot
    - cron: "20 23 * * 6"

jobs:
  lint:
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black isort autoflake

      - name: Sort imports
        run: isort . --check --diff -rc

      - name: black
        run: black . --check

  build:
    runs-on: ${{ matrix.os }}
    needs: lint
    if: github.event_name != 'release'
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          touch Cargo.toml.orig
          poetry install

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Build Python package
        run: poetry run maturin develop --release

      - name: pytest
        run: poetry run pytest tests

  python-publish:
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          touch Cargo.toml.orig
          poetry install

      - name: Build Python package
        run: poetry run maturin build --manylinux 2010-unchecked --release --no-sdist --strip --interpreter python${{matrix.python_version}}

      - name: List wheels
        if: matrix.os == 'windows-latest'
        run: dir target\wheels\

      - name: List wheels
        if:  matrix.os != 'windows-latest'
        run: find ./target/wheels/

      # Note: Windows doesn't support glob
      # https://stackoverflow.com/a/52481267/270334
      - name: Install wheels
        if:  matrix.os == 'windows-latest'
        run: pip install --find-links=target\wheels dhall-python

      - name: Install wheels
        if:  matrix.os != 'windows-latest'
        run: pip install target/wheels/dhall*.whl

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/wheels/dhall*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: PyPi publish
        if: matrix.os == 'ubuntu-latest'
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI }}
        run: poetry run maturin publish --manylinux 2010-unchecked --username __token__ --interpreter python${{matrix.python_version}}

      - name: PyPi publish
        if: matrix.os != 'ubuntu-latest'
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI }}
        run: poetry run maturin publish --username __token__ --interpreter python${{matrix.python_version}}
